---
- name: Set required facts
  ansible.builtin.set_fact:
    aws_region: us-east-1
    dmz_ssh_key_name: aws-test-key
    priv_network_ssh_key_name: aws-test-key

- name: Test Transit Network Deployment
  block:
    - name: Create Transit Network
      ansible.builtin.include_role:
        name: lab.aws_infrastructure_config_demos..manage_transit_peered_networks
      vars:
        manage_transit_peered_networks_operation: create

    - name: Check VPCs
      amazon.aws.ec2_vpc_net_info:
        filters:
          "tag:deployment": ansible
          "tag:ansible-role": transit_peered_networks
        region: "{{ aws_region }}"
      register: vpc_result

    - name: Assert that there are at least two VPCs that exist
      ansible.builtin.assert:
        that:
          - vpc_result.vpcs | length >= 2

    - name: Get transit gateway
      community.aws.ec2_transit_gateway_info:
        filters:
          "tag:deployment": ansible
          "tag:ansible-role": transit_peered_networks
          state:
            - pending-acceptance
            - pending
            - available
        region: "{{ aws_region }}"
      register: transit_gw_results

    - name: Get transit gateway attachments
      community.aws.ec2_transit_gateway_vpc_attachment_info:
        filters:
          "tag:deployment": ansible
          "tag:ansible-role": transit_peered_networks
          transit-gateway-id: "{{ transit_gw_results.transit_gateways[0].transit_gateway_id }}"
          state:
            - pending
            - available
        region: "{{ aws_region }}"
      register: tgw_attachment_results
      when: transit_gw_results.transit_gateways is defined and (transit_gw_results.transit_gateways | length == 1)

    - name: Assert that there are attachments to the two VPCs created
      ansible.builtin.assert:
        that:
          - tgw_attachment_results.attachments is defined
          - tgw_attachment_results.attachments | length == 2

    - name: Gather information about all instances in region
      amazon.aws.ec2_instance_info:
        filters:
          "tag:deployment": ansible
          "tag:ansible-role": transit_peered_networks
        region: "{{ aws_region }}"
      register: ec2_result

    - name: Assert that there are at least two EC2 instances
      ansible.builtin.assert:
        that:
          - vpc_result.vpcs | length >= 2

  always:
    - name: Delete Transit Network
      ansible.builtin.include_role:
        name: lab.aws_infrastructure_config_demos..manage_transit_peered_networks
      vars:
        manage_transit_peered_networks_operation: delete
